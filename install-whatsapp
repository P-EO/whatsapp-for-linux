#!/usr/bin/env bash

# A simple error function
function error {
  echo -e "\\e[41;30m$1\\e[0m"
  exit 1 
}

# A simple success function
function success {
  echo -e "\\e[102;30m$1\\e[0m"
}

# To reduce annoying stderr output by apt & nativefier
function reduceoutput { 
  grep -v "apt does not have a stable CLI interface.\\|are up to date\\|Hit\\|Packaging\\|Preparing\\|Converting\\|Finalizing\\|App built to\\|shortcuts are up to you\\|to remove\\|Reading package lists...\\|newest version\\|Building dependency tree\\|Reading state information...\\|Need to get\\|After this operation,\\|Get:\\|Fetched\\|Selecting previously unselected package\\|Preparing to unpack\\|Unpacking \\|Setting up \\|Processing triggers for "
}

# Log errors
function log {
  tee $directory/log.txt
}

# Check if user using root privilege to run this script
if [[ "$(id -u)" == 0 ]]; then
	error "This script is not designed to be runned as root! Please try again as a regular user." 
fi

sudo rm -rf "${HOME}/WhatsApp" 2>&1 > /dev/null
sudo mkdir "${HOME}/WhatsApp" | log || error  "Failed creating folder in your home folder."
directory="${HOME}/WhatsApp"
cd $directory | log || error  "Failed to cd to $directory"
touch log.txt
echo ""

# Identifying the system package manager
if command -v apt > /dev/null; then
    packagemanager=apt
    echo -e "\\e[32mPackage manager is $packagemanager\n\n\nUpdating package list...\\e[0m"
    ( sudo $packagemanager update 2>&1 | log || error "Failed updating package list." ) | reduceoutput 
    echo -e  "\n\n\\e[32mInstalling wget and curl...\\e[0m"
    ( sudo $packagemanager install wget curl -y 2>&1 || error "Failed installing wget and curl" ) | reduceoutput
elif command -v dnf > /dev/null; then
    packagemanager=dnf
    echo -e "\\e[32mPackage manager is $packagemanager\\e[0m"
    sudo $packagemanager check-update > /dev/null
    sudo $packagemanager install wget curl -y > /dev/null || error "Failed installing wget and curl"
elif command -v yum > /dev/null; then
    packagemanager=yum
    echo -e "\\e[32mPackage manager is $packagemanager\\e[0m"
    sudo $packagemanager check-update 
    sudo $packagemanager install curl -y | log || error  "Failed installing curl"
    sudo $packagemanager install wget -y | log || error  "Failed installing wget"
else
    error "Package manager not found. This script only support apt, yum and dnf."
fi


# Installing Nodejs using snapd
if ! command -v snap > /dev/null; then
    sudo $packagemanager install snapd -y
    sudo snap install node --classic
    if $(command -v node > /dev/null) &&  $(command -v npm > /dev/null) ; then 
        success "Nodejs installed sucessfully."
    fi

# Installing Nativefier
if command -v npm > /dev/null; then
    if ! command -v nativefier > /dev/null; then
        echo -e "\\e[32mInstalling Nativefier...\\e[0m"
        npm install -g nativefier | log || error  "Failed installing Nativefier. Try running 'npm install -g nativefier' and run this script again."
        cd "${HOME}/WhatsApp" | log || error  "Failed cd to WhatsApp folder."
        wget -qo-  https://raw.githubusercontent.com/ITdairy/whatsapp-for-linux/main/run-whatsapp.sh  https://raw.githubusercontent.com/ITdairy/whatsapp-for-linux/main/whatsapp.desktop https://raw.githubusercontent.com/ITdairy/whatsapp-for-linux/main/whatsapp.png | error "Failed to download files."
        if command -v nativefier > /dev/null; then
            success "Nativefier installed successfully."
        fi
    else 
        success "\\e[32mNativefier is already installed.\\e[0m"
    fi
else
    error "Failed. NPM not found. Try running 'sudo snap install node --classic' and run this script again."
fi

# Identifying architecture
arch=$(uname -m)

# Fix nativefier can't detect x86_64 architecture
if [ "$arch" == x86_64 ]; then
    arch=x64 
fi

#Nativefying WhatsApp
if command -v nativefier > /dev/null; then
    success "Nativefier installed successfully."
    echo -e "\\e[32m\n\nNativefying WhatsApp from http://web.whatsapp.com ...\\e[39m"
    (nativefier https://web.whatsapp.com --user-agent "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36" -a "$arch" --maximize -n WhatsApp ) 2>&1 | reduceoutput
    sudo touch run-whatsapp
    echo "sudo rm -rf ${HOME}/.config/whatsapp-nativefier-*/Service Worker && $HOME/WhatsApp/WhatsApp-linux-$(uname -m)/WhatsApp" > ./run-whatsapp
    sudo chmod +x ./run-whatsapp
    echo -e "\\e[32mDone installing WhatsApp, Creating desktop shortcut and menu shortcut..."
else
    error "Failed. Nativefier not found. Try running 'npm install -g nativefier' or with root 'sudo npm install -g nativefier' and run this script again. "
fi


#Create desktop & menu shortcut
sudo cp ./whatsapp.desktop "$HOME/.local/share/applications"
sudo cp ./whatsapp.desktop "$HOME/Desktop"
echo -e "\\e[32mDone! You should be able to run WhatsApp from desktop and menu bar.\\e[39m"
cd "$HOME"  || exit 
